operation equip(project: text, collection: text, token_id: integer) {
  val account = ft4.auth.authenticate();
  val token = require(
    yours.get_token(project, collection, token_id),
    "Token not found %s/%s/%s".format(project, collection, token_id)
  );
  require(
    yours.get_balance(token, account) > 0,
    "Token balance is 0 %s/%s/%s".format(project, collection, token_id)
  );
  val pfp = require(
    pfp @? { token },
    "Token is not a PFP %s/%s/%s".format(project, collection, token_id)
  );

  // Delete potential previously equipped avatar
  val current = equipped_pfp @? { account };
  if (current != null) {
    on_unequip(current.pfp);
    delete current;
  }

  create equipped_pfp ( account, pfp );
  on_equip(pfp);
}

@extend(ft4.auth.auth_handler)
function () = ft4.auth.add_auth_handler(scope = rell.meta(equip).mount_name, flags = []);
