@extend(yours.external.on_external_create)
function on_external_create(token: yours.token, attributes: map<text, gtv>) {
  when (token.collection.name) {
    "Pudgy Penguins" -> _create_avatar(token, attributes);
    "Equipment" -> _create_equipment(token, attributes);
    else -> return;
  }
}

function _create_avatar(token: yours.token, attributes: map<text, gtv>) {
  val avatar = avatar @? { token };
  if (avatar == null) {
    create avatar(token, description = text.from_gtv(attributes["description"]), image = text.from_gtv(attributes["image"]));
  }
}

function _create_equipment(token: yours.token, attributes: map<text, gtv>) {
  var equipment = equipment @? { token };
  if (equipment == null) {
    val slot = text.from_gtv(attributes["slot"]);
    val weight = integer.from_gtv(attributes["weight"]);
    val description = text.from_gtv(attributes["description"]);
    val image = text.from_gtv(attributes["image"]);
    equipment = create equipment(token, slot, weight, description, image);

    when (slot) {
      "head", "chest", "hands", "legs", "feets" -> create armor(equipment, defense = integer.from_gtv(attributes["defense"]));
      "weapon" -> create weapon(equipment, damage = integer.from_gtv(attributes["damage"]));
      else -> return;
    }
  }
}

@extend(yours.after_transfer)
function on_transfer(yours.token, from: ft4.accounts.account, to: ft4.accounts.account, amount: integer) {
  val avatar = avatar @? { token };
  if (avatar != null) {
    _unequip_avatar(avatar, from);
    _equip_avatar(avatar, to);
  }

  val equipment = equipment @? { token };
  if (equipment != null) {
    _unequip_tool(from, equipment);
  }
}

@extend(yours.after_mint)
function on_mint(yours.token, account: ft4.accounts.account, amount: integer) {
  val avatar = avatar @? { token };
  if (avatar != null) {
    _equip_avatar(avatar, account);
  }
}

function _unequip_avatar(avatar, account: ft4.accounts.account) {
  delete equipped_avatar @? { account, avatar };
}

function _equip_avatar(avatar, account: ft4.accounts.account) {
  if (equipped_avatar @? { account } != null) {
    // Already equips an avatar
    return;
  }
  create equipped_avatar(account, avatar);
}

function _unequip_tool(account: ft4.accounts.account, equipment) {
  delete equipped_equipment @? { account, equipment };
}
